1..this can be solved by binary search pattern--O(logn)
pivot element is nothing but greatest element in an rotated sorted array
find pivot element
perform left binary search
perform right binary search
    

  def search(self, nums: List[int], target: int) -> int:
        pivot=self.pivot(nums)
        if pivot==-1:
            return self.binarysearch(nums,0,len(nums)-1,target)
        if nums[pivot]==target:
            return pivot
            
        if nums[0]<=target:
            return self.binarysearch(nums,0,pivot-1,target) 
        return self.binarysearch(nums,pivot+1,len(nums)-1,target)
